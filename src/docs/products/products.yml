paths:
  /api/products/:
    get:
      summary: Obtener todos los productos
      tags:
        - Productos
      responses:
        "200":
          description: Los productos fueron obtenidos correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "500":
          description: Error del servidor
    post:
      summary: Crear un producto
      tags:
        - Productos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/updateProduct"
      responses:
        "200":
          description: El producto fue creado correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "404":
          description: Error de validación de esquema
        "500":
          description: Error del servidor

  /api/products/{id}:
    get:
      summary: Obtener un producto por su ID
      tags:
        - Productos
      parameters:
        - name: id
          in: path
          required: true
          description: ID del producto que queremos obtener
          schema:
            type: string
      responses:
        "200":
          description: El producto fue obtenido correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "404":
          description: El ID no fue encontrado

    put:
      summary: Actualizar un producto
      tags:
        - Productos
      parameters:
        - name: id
          in: path
          required: true
          description: ID del producto que queremos actualizar
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/updateProduct"
      responses:
        "200":
          description: Producto actualizado
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "404":
          description: El ID no fue encontrado

    delete:
      summary: Eliminar un producto por su ID
      tags:
        - Productos
      parameters:
        - name: id
          in: path
          required: true
          description: ID del producto que queremos eliminar
          schema:
            type: string
      responses:
        "200":
          description: Producto eliminado
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "404":
          description: El ID no fue encontrado

  /api/products/sort/up:
    get:
      summary: Obtener todos los productos ordenados por precio ascendente
      tags:
        - Productos
      responses:
        "200":
          description: Los productos fueron obtenidos correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "500":
          description: Error del servidor

  /api/products/sort/down:
    get:
      summary: Obtener todos los productos ordenados por precio descendiente
      tags:
        - Productos
      responses:
        "200":
          description: Los productos fueron obtenidos correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "500":
          description: Error del servidor

  /api/products/search/{key}/{value}:
    get:
      summary: Buscar productos por campo y valor
      tags:
        - Productos
      parameters:
        - name: key
          in: path
          required: true
          description: Nombre del campo por el cual buscar 
          schema:
            type: string
        - name: value
          in: path
          required: true
          description: Valor a buscar en el campo especificado
          schema:
            type: string
      responses:
        "200":
          description: Los productos fueron encontrados correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "404":
          description: No se encontraron productos que coincidan con la búsqueda
        "500":
          description: Error del servidor

  /api/products/mockingproducts:
    post:
      summary: Crear productos de prueba
      tags:
        - Productos
      requestBody:
        required: false
      responses:
        "201":
          description: Productos de prueba creados exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "400":
          description: Solicitud incorrecta
        "500":
          description: Error del servidor


components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
          description: ID autogenerado por MongoDb
          example: 64e4b0393389cdc4c97cbf65
        title:
          type: string
          description: Titulo del producto
          example: Cuaderno Setter
        description:
          type: string
          description: Descripción del producto
          example: Con espiral, tapa de colores y papel 70 grs.
        code:
          type: string
          description: Código del producto
          example: myb8
        price: 
          type: number
          description: Precio del producto
          example: 1500
        status:
          type: boolean 
          description: Disponibilidad del producto
          example: true
        stock: 
          type: number
          description: Cantidad del producto
          example: 10
        category: 
          type: string
          description: Categoría del producto
          example: Librería
        thumbnails:
          type: array
          description: Imágenes del producto
          items:
            type: string
            example: producto0.jpg
        owner:
          type: string
          description: Id del usuario creador del producto 
          example: 64bfc47a329120e07ce7d36
  requestBodies:
      updateProduct:
        type: object
        properties:
          title:
            type: string
            description: Titulo del producto
            example: Cuaderno Setter
          description:
            type: string
            description: Descripción del producto
            example: Con espiral, tapa de colores y papel 70 grs.
          code:
            type: string
            description: Código del producto
            example: myb8
          price: 
            type: number
            description: Precio del producto
            example: 1500
          status:
            type: boolean 
            description: Disponibilidad del producto
            example: true
          stock: 
            type: number
            description: Cantidad del producto
            example: 10
          category: 
            type: string
            description: Categoría del producto
            example: Librería
          thumbnails:
            type: array
            description: Imágenes del producto
            items:
              type: string
              example: producto0.jpg